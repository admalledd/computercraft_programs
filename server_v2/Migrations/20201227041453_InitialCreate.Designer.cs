// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server_v2.Entities;

namespace server_v2.Migrations
{
    [DbContext(typeof(CCServerContext))]
    [Migration("20201227041453_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("server_v2.Entities.Block", b =>
                {
                    b.Property<long>("BlockKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BlockId")
                        .HasColumnType("TEXT");

                    b.Property<long>("Loc_X")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Loc_Y")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Loc_Z")
                        .HasColumnType("INTEGER");

                    b.Property<long>("WorldKey")
                        .HasColumnType("INTEGER");

                    b.HasKey("BlockKey");

                    b.HasIndex("WorldKey");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("server_v2.Entities.Turtle", b =>
                {
                    b.Property<string>("TurtleKey")
                        .HasColumnType("TEXT");

                    b.Property<long>("Loc_X")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Loc_Y")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Loc_Z")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TurtleCurrentWSGuid")
                        .HasColumnType("TEXT");

                    b.HasKey("TurtleKey");

                    b.ToTable("Turtles");
                });

            modelBuilder.Entity("server_v2.Entities.World", b =>
                {
                    b.Property<long>("WorldKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("WorldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("WorldName")
                        .HasColumnType("TEXT");

                    b.HasKey("WorldKey");

                    b.ToTable("World");
                });

            modelBuilder.Entity("server_v2.Entities.Block", b =>
                {
                    b.HasOne("server_v2.Entities.World", "World")
                        .WithMany("Blocks")
                        .HasForeignKey("WorldKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("World");
                });

            modelBuilder.Entity("server_v2.Entities.World", b =>
                {
                    b.Navigation("Blocks");
                });
#pragma warning restore 612, 618
        }
    }
}
